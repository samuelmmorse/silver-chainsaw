Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RESERVEDELEMENT

Grammar

Rule 0     S' -> starter
Rule 1     starter -> sentences
Rule 2     interpretedname -> NUMERAL
Rule 3     interpretedname -> QUOTEDSTRING
Rule 4     sentence -> atomsent
Rule 5     sentence -> commentsent
Rule 6     sentence -> boolsent
Rule 7     sentences -> sentence
Rule 8     sentences -> sentence sentences
Rule 9     sentences -> empty
Rule 10    empty -> <empty>
Rule 11    predicate -> interpretedname
Rule 12    termseq -> interpretedname
Rule 13    termseq -> interpretedname termseq
Rule 14    termseq -> empty
Rule 15    atomsent -> OPEN predicate termseq CLOSE
Rule 16    boolsent -> OPEN AND sentences CLOSE
Rule 17    boolsent -> OPEN OR sentences CLOSE
Rule 18    boolsent -> OPEN IF sentence sentence CLOSE
Rule 19    boolsent -> OPEN IFF sentence sentence CLOSE
Rule 20    boolsent -> OPEN NOT sentence CLOSE
Rule 21    commentsent -> OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE

Terminals, with rules where they appear

AND                  : 16
CLOSE                : 15 16 17 18 19 20 21
CL_COMMENT           : 21
IF                   : 18
IFF                  : 19
NOT                  : 20
NUMERAL              : 2
OPEN                 : 15 16 17 18 19 20 21
OR                   : 17
QUOTEDSTRING         : 3 21
RESERVEDELEMENT      : 
error                : 

Nonterminals, with rules where they appear

atomsent             : 4
boolsent             : 6
commentsent          : 5
empty                : 9 14
interpretedname      : 11 12 13
predicate            : 15
sentence             : 7 8 18 18 19 19 20 21
sentences            : 1 8 16 17
starter              : 0
termseq              : 13 15

Parsing method: LALR

state 0

    (0) S' -> . starter
    (1) starter -> . sentences
    (7) sentences -> . sentence
    (8) sentences -> . sentence sentences
    (9) sentences -> . empty
    (4) sentence -> . atomsent
    (5) sentence -> . commentsent
    (6) sentence -> . boolsent
    (10) empty -> .
    (15) atomsent -> . OPEN predicate termseq CLOSE
    (21) commentsent -> . OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE

    $end            reduce using rule 10 (empty -> .)
    OPEN            shift and go to state 8

    starter                        shift and go to state 1
    sentences                      shift and go to state 2
    sentence                       shift and go to state 3
    empty                          shift and go to state 4
    atomsent                       shift and go to state 5
    commentsent                    shift and go to state 6
    boolsent                       shift and go to state 7

state 1

    (0) S' -> starter .



state 2

    (1) starter -> sentences .

    $end            reduce using rule 1 (starter -> sentences .)


state 3

    (7) sentences -> sentence .
    (8) sentences -> sentence . sentences
    (7) sentences -> . sentence
    (8) sentences -> . sentence sentences
    (9) sentences -> . empty
    (4) sentence -> . atomsent
    (5) sentence -> . commentsent
    (6) sentence -> . boolsent
    (10) empty -> .
    (15) atomsent -> . OPEN predicate termseq CLOSE
    (21) commentsent -> . OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE

  ! reduce/reduce conflict for $end resolved using rule 7 (sentences -> sentence .)
  ! reduce/reduce conflict for CLOSE resolved using rule 7 (sentences -> sentence .)
    $end            reduce using rule 7 (sentences -> sentence .)
    CLOSE           reduce using rule 7 (sentences -> sentence .)
    OPEN            shift and go to state 8

  ! $end            [ reduce using rule 10 (empty -> .) ]
  ! CLOSE           [ reduce using rule 10 (empty -> .) ]

    sentence                       shift and go to state 3
    sentences                      shift and go to state 9
    empty                          shift and go to state 4
    atomsent                       shift and go to state 5
    commentsent                    shift and go to state 6
    boolsent                       shift and go to state 7

state 4

    (9) sentences -> empty .

    $end            reduce using rule 9 (sentences -> empty .)
    CLOSE           reduce using rule 9 (sentences -> empty .)


state 5

    (4) sentence -> atomsent .

    OPEN            reduce using rule 4 (sentence -> atomsent .)
    $end            reduce using rule 4 (sentence -> atomsent .)
    CLOSE           reduce using rule 4 (sentence -> atomsent .)


state 6

    (5) sentence -> commentsent .

    OPEN            reduce using rule 5 (sentence -> commentsent .)
    $end            reduce using rule 5 (sentence -> commentsent .)
    CLOSE           reduce using rule 5 (sentence -> commentsent .)


state 7

    (6) sentence -> boolsent .

    OPEN            reduce using rule 6 (sentence -> boolsent .)
    $end            reduce using rule 6 (sentence -> boolsent .)
    CLOSE           reduce using rule 6 (sentence -> boolsent .)


state 8

    (15) atomsent -> OPEN . predicate termseq CLOSE
    (21) commentsent -> OPEN . CL_COMMENT QUOTEDSTRING sentence CLOSE
    (16) boolsent -> OPEN . AND sentences CLOSE
    (17) boolsent -> OPEN . OR sentences CLOSE
    (18) boolsent -> OPEN . IF sentence sentence CLOSE
    (19) boolsent -> OPEN . IFF sentence sentence CLOSE
    (20) boolsent -> OPEN . NOT sentence CLOSE
    (11) predicate -> . interpretedname
    (2) interpretedname -> . NUMERAL
    (3) interpretedname -> . QUOTEDSTRING

    CL_COMMENT      shift and go to state 11
    AND             shift and go to state 13
    OR              shift and go to state 14
    IF              shift and go to state 15
    IFF             shift and go to state 16
    NOT             shift and go to state 17
    NUMERAL         shift and go to state 19
    QUOTEDSTRING    shift and go to state 12

    predicate                      shift and go to state 10
    interpretedname                shift and go to state 18

state 9

    (8) sentences -> sentence sentences .

    $end            reduce using rule 8 (sentences -> sentence sentences .)
    CLOSE           reduce using rule 8 (sentences -> sentence sentences .)


state 10

    (15) atomsent -> OPEN predicate . termseq CLOSE
    (12) termseq -> . interpretedname
    (13) termseq -> . interpretedname termseq
    (14) termseq -> . empty
    (2) interpretedname -> . NUMERAL
    (3) interpretedname -> . QUOTEDSTRING
    (10) empty -> .

    NUMERAL         shift and go to state 19
    QUOTEDSTRING    shift and go to state 12
    CLOSE           reduce using rule 10 (empty -> .)

    termseq                        shift and go to state 20
    interpretedname                shift and go to state 21
    empty                          shift and go to state 22

state 11

    (21) commentsent -> OPEN CL_COMMENT . QUOTEDSTRING sentence CLOSE

    QUOTEDSTRING    shift and go to state 23


state 12

    (3) interpretedname -> QUOTEDSTRING .

    NUMERAL         reduce using rule 3 (interpretedname -> QUOTEDSTRING .)
    QUOTEDSTRING    reduce using rule 3 (interpretedname -> QUOTEDSTRING .)
    CLOSE           reduce using rule 3 (interpretedname -> QUOTEDSTRING .)


state 13

    (16) boolsent -> OPEN AND . sentences CLOSE
    (7) sentences -> . sentence
    (8) sentences -> . sentence sentences
    (9) sentences -> . empty
    (4) sentence -> . atomsent
    (5) sentence -> . commentsent
    (6) sentence -> . boolsent
    (10) empty -> .
    (15) atomsent -> . OPEN predicate termseq CLOSE
    (21) commentsent -> . OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE

    CLOSE           reduce using rule 10 (empty -> .)
    OPEN            shift and go to state 8

    sentences                      shift and go to state 24
    sentence                       shift and go to state 3
    empty                          shift and go to state 4
    atomsent                       shift and go to state 5
    commentsent                    shift and go to state 6
    boolsent                       shift and go to state 7

state 14

    (17) boolsent -> OPEN OR . sentences CLOSE
    (7) sentences -> . sentence
    (8) sentences -> . sentence sentences
    (9) sentences -> . empty
    (4) sentence -> . atomsent
    (5) sentence -> . commentsent
    (6) sentence -> . boolsent
    (10) empty -> .
    (15) atomsent -> . OPEN predicate termseq CLOSE
    (21) commentsent -> . OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE

    CLOSE           reduce using rule 10 (empty -> .)
    OPEN            shift and go to state 8

    sentences                      shift and go to state 25
    sentence                       shift and go to state 3
    empty                          shift and go to state 4
    atomsent                       shift and go to state 5
    commentsent                    shift and go to state 6
    boolsent                       shift and go to state 7

state 15

    (18) boolsent -> OPEN IF . sentence sentence CLOSE
    (4) sentence -> . atomsent
    (5) sentence -> . commentsent
    (6) sentence -> . boolsent
    (15) atomsent -> . OPEN predicate termseq CLOSE
    (21) commentsent -> . OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 8

    sentence                       shift and go to state 26
    atomsent                       shift and go to state 5
    commentsent                    shift and go to state 6
    boolsent                       shift and go to state 7

state 16

    (19) boolsent -> OPEN IFF . sentence sentence CLOSE
    (4) sentence -> . atomsent
    (5) sentence -> . commentsent
    (6) sentence -> . boolsent
    (15) atomsent -> . OPEN predicate termseq CLOSE
    (21) commentsent -> . OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 8

    sentence                       shift and go to state 27
    atomsent                       shift and go to state 5
    commentsent                    shift and go to state 6
    boolsent                       shift and go to state 7

state 17

    (20) boolsent -> OPEN NOT . sentence CLOSE
    (4) sentence -> . atomsent
    (5) sentence -> . commentsent
    (6) sentence -> . boolsent
    (15) atomsent -> . OPEN predicate termseq CLOSE
    (21) commentsent -> . OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 8

    sentence                       shift and go to state 28
    atomsent                       shift and go to state 5
    commentsent                    shift and go to state 6
    boolsent                       shift and go to state 7

state 18

    (11) predicate -> interpretedname .

    NUMERAL         reduce using rule 11 (predicate -> interpretedname .)
    QUOTEDSTRING    reduce using rule 11 (predicate -> interpretedname .)
    CLOSE           reduce using rule 11 (predicate -> interpretedname .)


state 19

    (2) interpretedname -> NUMERAL .

    NUMERAL         reduce using rule 2 (interpretedname -> NUMERAL .)
    QUOTEDSTRING    reduce using rule 2 (interpretedname -> NUMERAL .)
    CLOSE           reduce using rule 2 (interpretedname -> NUMERAL .)


state 20

    (15) atomsent -> OPEN predicate termseq . CLOSE

    CLOSE           shift and go to state 29


state 21

    (12) termseq -> interpretedname .
    (13) termseq -> interpretedname . termseq
    (12) termseq -> . interpretedname
    (13) termseq -> . interpretedname termseq
    (14) termseq -> . empty
    (2) interpretedname -> . NUMERAL
    (3) interpretedname -> . QUOTEDSTRING
    (10) empty -> .

  ! reduce/reduce conflict for CLOSE resolved using rule 10 (empty -> .)
    NUMERAL         shift and go to state 19
    QUOTEDSTRING    shift and go to state 12
    CLOSE           reduce using rule 10 (empty -> .)

  ! CLOSE           [ reduce using rule 12 (termseq -> interpretedname .) ]

    interpretedname                shift and go to state 21
    termseq                        shift and go to state 30
    empty                          shift and go to state 22

state 22

    (14) termseq -> empty .

    CLOSE           reduce using rule 14 (termseq -> empty .)


state 23

    (21) commentsent -> OPEN CL_COMMENT QUOTEDSTRING . sentence CLOSE
    (4) sentence -> . atomsent
    (5) sentence -> . commentsent
    (6) sentence -> . boolsent
    (15) atomsent -> . OPEN predicate termseq CLOSE
    (21) commentsent -> . OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 8

    sentence                       shift and go to state 31
    atomsent                       shift and go to state 5
    commentsent                    shift and go to state 6
    boolsent                       shift and go to state 7

state 24

    (16) boolsent -> OPEN AND sentences . CLOSE

    CLOSE           shift and go to state 32


state 25

    (17) boolsent -> OPEN OR sentences . CLOSE

    CLOSE           shift and go to state 33


state 26

    (18) boolsent -> OPEN IF sentence . sentence CLOSE
    (4) sentence -> . atomsent
    (5) sentence -> . commentsent
    (6) sentence -> . boolsent
    (15) atomsent -> . OPEN predicate termseq CLOSE
    (21) commentsent -> . OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 8

    sentence                       shift and go to state 34
    atomsent                       shift and go to state 5
    commentsent                    shift and go to state 6
    boolsent                       shift and go to state 7

state 27

    (19) boolsent -> OPEN IFF sentence . sentence CLOSE
    (4) sentence -> . atomsent
    (5) sentence -> . commentsent
    (6) sentence -> . boolsent
    (15) atomsent -> . OPEN predicate termseq CLOSE
    (21) commentsent -> . OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE

    OPEN            shift and go to state 8

    sentence                       shift and go to state 35
    atomsent                       shift and go to state 5
    commentsent                    shift and go to state 6
    boolsent                       shift and go to state 7

state 28

    (20) boolsent -> OPEN NOT sentence . CLOSE

    CLOSE           shift and go to state 36


state 29

    (15) atomsent -> OPEN predicate termseq CLOSE .

    OPEN            reduce using rule 15 (atomsent -> OPEN predicate termseq CLOSE .)
    $end            reduce using rule 15 (atomsent -> OPEN predicate termseq CLOSE .)
    CLOSE           reduce using rule 15 (atomsent -> OPEN predicate termseq CLOSE .)


state 30

    (13) termseq -> interpretedname termseq .

    CLOSE           reduce using rule 13 (termseq -> interpretedname termseq .)


state 31

    (21) commentsent -> OPEN CL_COMMENT QUOTEDSTRING sentence . CLOSE

    CLOSE           shift and go to state 37


state 32

    (16) boolsent -> OPEN AND sentences CLOSE .

    OPEN            reduce using rule 16 (boolsent -> OPEN AND sentences CLOSE .)
    $end            reduce using rule 16 (boolsent -> OPEN AND sentences CLOSE .)
    CLOSE           reduce using rule 16 (boolsent -> OPEN AND sentences CLOSE .)


state 33

    (17) boolsent -> OPEN OR sentences CLOSE .

    OPEN            reduce using rule 17 (boolsent -> OPEN OR sentences CLOSE .)
    $end            reduce using rule 17 (boolsent -> OPEN OR sentences CLOSE .)
    CLOSE           reduce using rule 17 (boolsent -> OPEN OR sentences CLOSE .)


state 34

    (18) boolsent -> OPEN IF sentence sentence . CLOSE

    CLOSE           shift and go to state 38


state 35

    (19) boolsent -> OPEN IFF sentence sentence . CLOSE

    CLOSE           shift and go to state 39


state 36

    (20) boolsent -> OPEN NOT sentence CLOSE .

    OPEN            reduce using rule 20 (boolsent -> OPEN NOT sentence CLOSE .)
    $end            reduce using rule 20 (boolsent -> OPEN NOT sentence CLOSE .)
    CLOSE           reduce using rule 20 (boolsent -> OPEN NOT sentence CLOSE .)


state 37

    (21) commentsent -> OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE .

    OPEN            reduce using rule 21 (commentsent -> OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE .)
    $end            reduce using rule 21 (commentsent -> OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE .)
    CLOSE           reduce using rule 21 (commentsent -> OPEN CL_COMMENT QUOTEDSTRING sentence CLOSE .)


state 38

    (18) boolsent -> OPEN IF sentence sentence CLOSE .

    OPEN            reduce using rule 18 (boolsent -> OPEN IF sentence sentence CLOSE .)
    $end            reduce using rule 18 (boolsent -> OPEN IF sentence sentence CLOSE .)
    CLOSE           reduce using rule 18 (boolsent -> OPEN IF sentence sentence CLOSE .)


state 39

    (19) boolsent -> OPEN IFF sentence sentence CLOSE .

    OPEN            reduce using rule 19 (boolsent -> OPEN IFF sentence sentence CLOSE .)
    $end            reduce using rule 19 (boolsent -> OPEN IFF sentence sentence CLOSE .)
    CLOSE           reduce using rule 19 (boolsent -> OPEN IFF sentence sentence CLOSE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 3 resolved using rule (sentences -> sentence)
WARNING: rejected rule (empty -> <empty>) in state 3
WARNING: reduce/reduce conflict in state 21 resolved using rule (empty -> <empty>)
WARNING: rejected rule (termseq -> interpretedname) in state 21
WARNING: Rule (termseq -> interpretedname) is never reduced
