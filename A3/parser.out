Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CL_COMMENT
    RESERVEDELEMENT

Grammar

Rule 0     S' -> starter
Rule 1     starter -> sentences
Rule 2     interpretedname -> NUMERAL
Rule 3     interpretedname -> QUOTEDSTRING
Rule 4     sentence -> atomsent
Rule 5     sentence -> boolsent
Rule 6     sentences -> sentence
Rule 7     sentences -> sentence sentences
Rule 8     sentences -> empty
Rule 9     empty -> <empty>
Rule 10    predicate -> interpretedname
Rule 11    termseq -> interpretedname
Rule 12    termseq -> interpretedname termseq
Rule 13    termseq -> empty
Rule 14    atomsent -> OPEN predicate termseq CLOSE
Rule 15    atomsent -> empty
Rule 16    boolsent -> OPEN AND sentences CLOSE
Rule 17    boolsent -> OPEN OR sentences CLOSE
Rule 18    boolsent -> OPEN IF sentence sentence CLOSE
Rule 19    boolsent -> OPEN IFF sentence sentence CLOSE
Rule 20    boolsent -> OPEN NOT sentence CLOSE

Terminals, with rules where they appear

AND                  : 16
CLOSE                : 14 16 17 18 19 20
CL_COMMENT           : 
IF                   : 18
IFF                  : 19
NOT                  : 20
NUMERAL              : 2
OPEN                 : 14 16 17 18 19 20
OR                   : 17
QUOTEDSTRING         : 3
RESERVEDELEMENT      : 
error                : 

Nonterminals, with rules where they appear

atomsent             : 4
boolsent             : 5
empty                : 8 13 15
interpretedname      : 10 11 12
predicate            : 14
sentence             : 6 7 18 18 19 19 20
sentences            : 1 7 16 17
starter              : 0
termseq              : 12 14

Parsing method: LALR

state 0

    (0) S' -> . starter
    (1) starter -> . sentences
    (6) sentences -> . sentence
    (7) sentences -> . sentence sentences
    (8) sentences -> . empty
    (4) sentence -> . atomsent
    (5) sentence -> . boolsent
    (9) empty -> .
    (14) atomsent -> . OPEN predicate termseq CLOSE
    (15) atomsent -> . empty
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE

  ! shift/reduce conflict for OPEN resolved as shift
    $end            reduce using rule 9 (empty -> .)
    OPEN            shift and go to state 7

  ! OPEN            [ reduce using rule 9 (empty -> .) ]

    starter                        shift and go to state 1
    sentences                      shift and go to state 2
    sentence                       shift and go to state 3
    empty                          shift and go to state 4
    atomsent                       shift and go to state 5
    boolsent                       shift and go to state 6

state 1

    (0) S' -> starter .



state 2

    (1) starter -> sentences .

    $end            reduce using rule 1 (starter -> sentences .)


state 3

    (6) sentences -> sentence .
    (7) sentences -> sentence . sentences
    (6) sentences -> . sentence
    (7) sentences -> . sentence sentences
    (8) sentences -> . empty
    (4) sentence -> . atomsent
    (5) sentence -> . boolsent
    (9) empty -> .
    (14) atomsent -> . OPEN predicate termseq CLOSE
    (15) atomsent -> . empty
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE

  ! reduce/reduce conflict for $end resolved using rule 6 (sentences -> sentence .)
  ! reduce/reduce conflict for CLOSE resolved using rule 6 (sentences -> sentence .)
  ! shift/reduce conflict for OPEN resolved as shift
    $end            reduce using rule 6 (sentences -> sentence .)
    CLOSE           reduce using rule 6 (sentences -> sentence .)
    OPEN            shift and go to state 7

  ! $end            [ reduce using rule 9 (empty -> .) ]
  ! CLOSE           [ reduce using rule 9 (empty -> .) ]
  ! OPEN            [ reduce using rule 9 (empty -> .) ]

    sentence                       shift and go to state 3
    sentences                      shift and go to state 8
    empty                          shift and go to state 4
    atomsent                       shift and go to state 5
    boolsent                       shift and go to state 6

state 4

    (8) sentences -> empty .
    (15) atomsent -> empty .

  ! reduce/reduce conflict for $end resolved using rule 8 (sentences -> empty .)
  ! reduce/reduce conflict for CLOSE resolved using rule 8 (sentences -> empty .)
    $end            reduce using rule 8 (sentences -> empty .)
    CLOSE           reduce using rule 8 (sentences -> empty .)
    OPEN            reduce using rule 15 (atomsent -> empty .)

  ! $end            [ reduce using rule 15 (atomsent -> empty .) ]
  ! CLOSE           [ reduce using rule 15 (atomsent -> empty .) ]


state 5

    (4) sentence -> atomsent .

    OPEN            reduce using rule 4 (sentence -> atomsent .)
    $end            reduce using rule 4 (sentence -> atomsent .)
    CLOSE           reduce using rule 4 (sentence -> atomsent .)


state 6

    (5) sentence -> boolsent .

    OPEN            reduce using rule 5 (sentence -> boolsent .)
    $end            reduce using rule 5 (sentence -> boolsent .)
    CLOSE           reduce using rule 5 (sentence -> boolsent .)


state 7

    (14) atomsent -> OPEN . predicate termseq CLOSE
    (16) boolsent -> OPEN . AND sentences CLOSE
    (17) boolsent -> OPEN . OR sentences CLOSE
    (18) boolsent -> OPEN . IF sentence sentence CLOSE
    (19) boolsent -> OPEN . IFF sentence sentence CLOSE
    (20) boolsent -> OPEN . NOT sentence CLOSE
    (10) predicate -> . interpretedname
    (2) interpretedname -> . NUMERAL
    (3) interpretedname -> . QUOTEDSTRING

    AND             shift and go to state 10
    OR              shift and go to state 11
    IF              shift and go to state 12
    IFF             shift and go to state 13
    NOT             shift and go to state 14
    NUMERAL         shift and go to state 16
    QUOTEDSTRING    shift and go to state 17

    predicate                      shift and go to state 9
    interpretedname                shift and go to state 15

state 8

    (7) sentences -> sentence sentences .

    $end            reduce using rule 7 (sentences -> sentence sentences .)
    CLOSE           reduce using rule 7 (sentences -> sentence sentences .)


state 9

    (14) atomsent -> OPEN predicate . termseq CLOSE
    (11) termseq -> . interpretedname
    (12) termseq -> . interpretedname termseq
    (13) termseq -> . empty
    (2) interpretedname -> . NUMERAL
    (3) interpretedname -> . QUOTEDSTRING
    (9) empty -> .

    NUMERAL         shift and go to state 16
    QUOTEDSTRING    shift and go to state 17
    CLOSE           reduce using rule 9 (empty -> .)

    termseq                        shift and go to state 18
    interpretedname                shift and go to state 19
    empty                          shift and go to state 20

state 10

    (16) boolsent -> OPEN AND . sentences CLOSE
    (6) sentences -> . sentence
    (7) sentences -> . sentence sentences
    (8) sentences -> . empty
    (4) sentence -> . atomsent
    (5) sentence -> . boolsent
    (9) empty -> .
    (14) atomsent -> . OPEN predicate termseq CLOSE
    (15) atomsent -> . empty
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE

  ! shift/reduce conflict for OPEN resolved as shift
    CLOSE           reduce using rule 9 (empty -> .)
    OPEN            shift and go to state 7

  ! OPEN            [ reduce using rule 9 (empty -> .) ]

    sentences                      shift and go to state 21
    sentence                       shift and go to state 3
    empty                          shift and go to state 4
    atomsent                       shift and go to state 5
    boolsent                       shift and go to state 6

state 11

    (17) boolsent -> OPEN OR . sentences CLOSE
    (6) sentences -> . sentence
    (7) sentences -> . sentence sentences
    (8) sentences -> . empty
    (4) sentence -> . atomsent
    (5) sentence -> . boolsent
    (9) empty -> .
    (14) atomsent -> . OPEN predicate termseq CLOSE
    (15) atomsent -> . empty
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE

  ! shift/reduce conflict for OPEN resolved as shift
    CLOSE           reduce using rule 9 (empty -> .)
    OPEN            shift and go to state 7

  ! OPEN            [ reduce using rule 9 (empty -> .) ]

    sentences                      shift and go to state 22
    sentence                       shift and go to state 3
    empty                          shift and go to state 4
    atomsent                       shift and go to state 5
    boolsent                       shift and go to state 6

state 12

    (18) boolsent -> OPEN IF . sentence sentence CLOSE
    (4) sentence -> . atomsent
    (5) sentence -> . boolsent
    (14) atomsent -> . OPEN predicate termseq CLOSE
    (15) atomsent -> . empty
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE
    (9) empty -> .

  ! shift/reduce conflict for OPEN resolved as shift
    OPEN            shift and go to state 7
    CLOSE           reduce using rule 9 (empty -> .)

  ! OPEN            [ reduce using rule 9 (empty -> .) ]

    sentence                       shift and go to state 23
    atomsent                       shift and go to state 5
    boolsent                       shift and go to state 6
    empty                          shift and go to state 24

state 13

    (19) boolsent -> OPEN IFF . sentence sentence CLOSE
    (4) sentence -> . atomsent
    (5) sentence -> . boolsent
    (14) atomsent -> . OPEN predicate termseq CLOSE
    (15) atomsent -> . empty
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE
    (9) empty -> .

  ! shift/reduce conflict for OPEN resolved as shift
    OPEN            shift and go to state 7
    CLOSE           reduce using rule 9 (empty -> .)

  ! OPEN            [ reduce using rule 9 (empty -> .) ]

    sentence                       shift and go to state 25
    atomsent                       shift and go to state 5
    boolsent                       shift and go to state 6
    empty                          shift and go to state 24

state 14

    (20) boolsent -> OPEN NOT . sentence CLOSE
    (4) sentence -> . atomsent
    (5) sentence -> . boolsent
    (14) atomsent -> . OPEN predicate termseq CLOSE
    (15) atomsent -> . empty
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE
    (9) empty -> .

    OPEN            shift and go to state 7
    CLOSE           reduce using rule 9 (empty -> .)

    sentence                       shift and go to state 26
    atomsent                       shift and go to state 5
    boolsent                       shift and go to state 6
    empty                          shift and go to state 24

state 15

    (10) predicate -> interpretedname .

    NUMERAL         reduce using rule 10 (predicate -> interpretedname .)
    QUOTEDSTRING    reduce using rule 10 (predicate -> interpretedname .)
    CLOSE           reduce using rule 10 (predicate -> interpretedname .)


state 16

    (2) interpretedname -> NUMERAL .

    NUMERAL         reduce using rule 2 (interpretedname -> NUMERAL .)
    QUOTEDSTRING    reduce using rule 2 (interpretedname -> NUMERAL .)
    CLOSE           reduce using rule 2 (interpretedname -> NUMERAL .)


state 17

    (3) interpretedname -> QUOTEDSTRING .

    NUMERAL         reduce using rule 3 (interpretedname -> QUOTEDSTRING .)
    QUOTEDSTRING    reduce using rule 3 (interpretedname -> QUOTEDSTRING .)
    CLOSE           reduce using rule 3 (interpretedname -> QUOTEDSTRING .)


state 18

    (14) atomsent -> OPEN predicate termseq . CLOSE

    CLOSE           shift and go to state 27


state 19

    (11) termseq -> interpretedname .
    (12) termseq -> interpretedname . termseq
    (11) termseq -> . interpretedname
    (12) termseq -> . interpretedname termseq
    (13) termseq -> . empty
    (2) interpretedname -> . NUMERAL
    (3) interpretedname -> . QUOTEDSTRING
    (9) empty -> .

  ! reduce/reduce conflict for CLOSE resolved using rule 9 (empty -> .)
    NUMERAL         shift and go to state 16
    QUOTEDSTRING    shift and go to state 17
    CLOSE           reduce using rule 9 (empty -> .)

  ! CLOSE           [ reduce using rule 11 (termseq -> interpretedname .) ]

    interpretedname                shift and go to state 19
    termseq                        shift and go to state 28
    empty                          shift and go to state 20

state 20

    (13) termseq -> empty .

    CLOSE           reduce using rule 13 (termseq -> empty .)


state 21

    (16) boolsent -> OPEN AND sentences . CLOSE

    CLOSE           shift and go to state 29


state 22

    (17) boolsent -> OPEN OR sentences . CLOSE

    CLOSE           shift and go to state 30


state 23

    (18) boolsent -> OPEN IF sentence . sentence CLOSE
    (4) sentence -> . atomsent
    (5) sentence -> . boolsent
    (14) atomsent -> . OPEN predicate termseq CLOSE
    (15) atomsent -> . empty
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE
    (9) empty -> .

    OPEN            shift and go to state 7
    CLOSE           reduce using rule 9 (empty -> .)

    sentence                       shift and go to state 31
    atomsent                       shift and go to state 5
    boolsent                       shift and go to state 6
    empty                          shift and go to state 24

state 24

    (15) atomsent -> empty .

    OPEN            reduce using rule 15 (atomsent -> empty .)
    CLOSE           reduce using rule 15 (atomsent -> empty .)


state 25

    (19) boolsent -> OPEN IFF sentence . sentence CLOSE
    (4) sentence -> . atomsent
    (5) sentence -> . boolsent
    (14) atomsent -> . OPEN predicate termseq CLOSE
    (15) atomsent -> . empty
    (16) boolsent -> . OPEN AND sentences CLOSE
    (17) boolsent -> . OPEN OR sentences CLOSE
    (18) boolsent -> . OPEN IF sentence sentence CLOSE
    (19) boolsent -> . OPEN IFF sentence sentence CLOSE
    (20) boolsent -> . OPEN NOT sentence CLOSE
    (9) empty -> .

    OPEN            shift and go to state 7
    CLOSE           reduce using rule 9 (empty -> .)

    sentence                       shift and go to state 32
    atomsent                       shift and go to state 5
    boolsent                       shift and go to state 6
    empty                          shift and go to state 24

state 26

    (20) boolsent -> OPEN NOT sentence . CLOSE

    CLOSE           shift and go to state 33


state 27

    (14) atomsent -> OPEN predicate termseq CLOSE .

    OPEN            reduce using rule 14 (atomsent -> OPEN predicate termseq CLOSE .)
    $end            reduce using rule 14 (atomsent -> OPEN predicate termseq CLOSE .)
    CLOSE           reduce using rule 14 (atomsent -> OPEN predicate termseq CLOSE .)


state 28

    (12) termseq -> interpretedname termseq .

    CLOSE           reduce using rule 12 (termseq -> interpretedname termseq .)


state 29

    (16) boolsent -> OPEN AND sentences CLOSE .

    OPEN            reduce using rule 16 (boolsent -> OPEN AND sentences CLOSE .)
    $end            reduce using rule 16 (boolsent -> OPEN AND sentences CLOSE .)
    CLOSE           reduce using rule 16 (boolsent -> OPEN AND sentences CLOSE .)


state 30

    (17) boolsent -> OPEN OR sentences CLOSE .

    OPEN            reduce using rule 17 (boolsent -> OPEN OR sentences CLOSE .)
    $end            reduce using rule 17 (boolsent -> OPEN OR sentences CLOSE .)
    CLOSE           reduce using rule 17 (boolsent -> OPEN OR sentences CLOSE .)


state 31

    (18) boolsent -> OPEN IF sentence sentence . CLOSE

    CLOSE           shift and go to state 34


state 32

    (19) boolsent -> OPEN IFF sentence sentence . CLOSE

    CLOSE           shift and go to state 35


state 33

    (20) boolsent -> OPEN NOT sentence CLOSE .

    OPEN            reduce using rule 20 (boolsent -> OPEN NOT sentence CLOSE .)
    $end            reduce using rule 20 (boolsent -> OPEN NOT sentence CLOSE .)
    CLOSE           reduce using rule 20 (boolsent -> OPEN NOT sentence CLOSE .)


state 34

    (18) boolsent -> OPEN IF sentence sentence CLOSE .

    OPEN            reduce using rule 18 (boolsent -> OPEN IF sentence sentence CLOSE .)
    $end            reduce using rule 18 (boolsent -> OPEN IF sentence sentence CLOSE .)
    CLOSE           reduce using rule 18 (boolsent -> OPEN IF sentence sentence CLOSE .)


state 35

    (19) boolsent -> OPEN IFF sentence sentence CLOSE .

    OPEN            reduce using rule 19 (boolsent -> OPEN IFF sentence sentence CLOSE .)
    $end            reduce using rule 19 (boolsent -> OPEN IFF sentence sentence CLOSE .)
    CLOSE           reduce using rule 19 (boolsent -> OPEN IFF sentence sentence CLOSE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OPEN in state 0 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 3 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 10 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 11 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 12 resolved as shift
WARNING: shift/reduce conflict for OPEN in state 13 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (sentences -> sentence)
WARNING: rejected rule (empty -> <empty>) in state 3
WARNING: reduce/reduce conflict in state 4 resolved using rule (sentences -> empty)
WARNING: rejected rule (atomsent -> empty) in state 4
WARNING: reduce/reduce conflict in state 19 resolved using rule (empty -> <empty>)
WARNING: rejected rule (termseq -> interpretedname) in state 19
WARNING: Rule (termseq -> interpretedname) is never reduced
