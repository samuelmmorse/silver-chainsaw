/////////////////////////////////////////////
CLIF1 Valid
/////////////////////////////////////////////


PS C:\Users\samue\Documents\GitHub\silver-chainsaw> python .\LexerParser.py .\testfiles\a3-valid-clif1-v3.txt True 
Number of sentences: 5
Sentence: ('FuncA' 'a' 100 25)
... Lexing...
LexToken(OPEN,'(',1,0)
LexToken(QUOTEDSTRING,"'FuncA'",1,1)
LexToken(QUOTEDSTRING,"'a'",1,9)
LexToken(NUMERAL,'100',1,13)
LexToken(NUMERAL,'25',1,17)
LexToken(CLOSE,')',1,19)
...Parsing...
Atomic: ('FuncA' 'a' 100 25) : ops = 0, names = 2

Sentence: (and ('B' 'C') (or ('C' 'D')) (or ('FuncB') ('Func' 100 'A') ('something')))
... Lexing...
LexToken(OPEN,'(',1,0)
LexToken(AND,'and',1,1)
LexToken(OPEN,'(',1,5)
LexToken(QUOTEDSTRING,"'B'",1,6)
LexToken(QUOTEDSTRING,"'C'",1,10)
LexToken(CLOSE,')',1,13)
LexToken(OPEN,'(',1,15)
LexToken(OR,'or',1,16)
LexToken(OPEN,'(',1,19)
LexToken(QUOTEDSTRING,"'C'",1,20)
LexToken(QUOTEDSTRING,"'D'",1,24)
LexToken(CLOSE,')',1,27)
LexToken(CLOSE,')',1,28)
LexToken(OPEN,'(',1,30)
LexToken(OR,'or',1,31)
LexToken(OPEN,'(',1,34)
LexToken(QUOTEDSTRING,"'FuncB'",1,35)
LexToken(CLOSE,')',1,42)
LexToken(OPEN,'(',1,44)
LexToken(QUOTEDSTRING,"'Func'",1,45)
LexToken(NUMERAL,'100',1,52)
LexToken(QUOTEDSTRING,"'A'",1,56)
LexToken(CLOSE,')',1,59)
LexToken(OPEN,'(',1,61)
LexToken(QUOTEDSTRING,"'something'",1,62)
LexToken(CLOSE,')',1,73)
LexToken(CLOSE,')',1,74)
LexToken(CLOSE,')',1,75)
...Parsing...
Boolean: (and ('B' 'C') (or ('C' 'D')) (or ('FuncB') ('Func' 100 'A') ('something'))): ops = 3, names = 8

Sentence: ('cl:comment' 'B100%')
... Lexing...
LexToken(OPEN,'(',1,0)
LexToken(QUOTEDSTRING,"'cl:comment'",1,1)
LexToken(QUOTEDSTRING,"'B100%'",1,14)
LexToken(CLOSE,')',1,21)
...Parsing...
Atomic: ('cl:comment' 'B100%'): ops = 0, names = 2

Sentence: ('A1:"A_comment_inside"' 'COMMENT:B100%')
... Lexing...
LexToken(OPEN,'(',1,0)
LexToken(QUOTEDSTRING,'\'A1:"A_comment_inside"\'',1,1)
LexToken(QUOTEDSTRING,"'COMMENT:B100%'",1,25)
LexToken(CLOSE,')',1,40)
...Parsing...
Atomic: ('A1:"A_comment_inside"' 'COMMENT:B100%'): ops = 0, names = 2

Sentence: (iff (and ('B_100' 'B_101' '$100')) ('[TODAY]' '[4,5,6]' '[3+4]'))
... Lexing...
LexToken(OPEN,'(',1,0)
LexToken(IFF,'iff',1,1)
LexToken(OPEN,'(',1,5)
LexToken(AND,'and',1,6)
LexToken(OPEN,'(',1,10)
LexToken(QUOTEDSTRING,"'B_100'",1,11)
LexToken(QUOTEDSTRING,"'B_101'",1,19)
LexToken(QUOTEDSTRING,"'$100'",1,27)
LexToken(CLOSE,')',1,33)
LexToken(CLOSE,')',1,34)
LexToken(OPEN,'(',1,36)
LexToken(QUOTEDSTRING,"'[TODAY]'",1,37)
LexToken(QUOTEDSTRING,"'[4,5,6]'",1,47)
LexToken(QUOTEDSTRING,"'[3+4]'",1,57)
LexToken(CLOSE,')',1,64)
LexToken(CLOSE,')',1,65)
...Parsing...
Boolean: (iff (and ('B_100' 'B_101' '$100')) ('[TODAY]' '[4,5,6]' '[3+4]')) : ops = 2, names = 6

/////////////////////////////////////////////
CLIF2 Valid
/////////////////////////////////////////////

PS C:\Users\samue\Documents\GitHub\silver-chainsaw> python .\LexerParser.py .\testfiles\a3-valid-clif2-v3.txt True 
Number of sentences: 6
Sentence: (or (not ('TODAY=03/26/22')) (not ('TODAY=03/26/22')) (and ('FRIDAY' 13)))
... Lexing...
LexToken(OPEN,'(',1,0)
LexToken(OR,'or',1,1)
LexToken(OPEN,'(',1,4)
LexToken(NOT,'not',1,5)
LexToken(OPEN,'(',1,9)
LexToken(QUOTEDSTRING,"'TODAY=03/26/22'",1,10)
LexToken(CLOSE,')',1,26)
LexToken(CLOSE,')',1,27)
LexToken(OPEN,'(',1,29)
LexToken(NOT,'not',1,30)
LexToken(OPEN,'(',1,34)
LexToken(QUOTEDSTRING,"'TODAY=03/26/22'",1,35)
LexToken(CLOSE,')',1,51)
LexToken(CLOSE,')',1,52)
LexToken(OPEN,'(',1,54)
LexToken(AND,'and',1,55)
LexToken(OPEN,'(',1,59)
LexToken(QUOTEDSTRING,"'FRIDAY'",1,60)
LexToken(NUMERAL,'13',1,69)
LexToken(CLOSE,')',1,71)
LexToken(CLOSE,')',1,72)
LexToken(CLOSE,')',1,73)
...Parsing...
Boolean: (or (not ('TODAY=03/26/22')) (not ('TODAY=03/26/22')) (and ('FRIDAY' 13))): ops = 4, names = 3

Sentence: (and (0))
... Lexing...
LexToken(OPEN,'(',1,0)
LexToken(AND,'and',1,1)
LexToken(OPEN,'(',1,5)
LexToken(NUMERAL,'0',1,6)
LexToken(CLOSE,')',1,7)
LexToken(CLOSE,')',1,8)
...Parsing...
Boolean: (and (0)): ops = 1, names = 0

Sentence: (and (0 1 2 3 4 'more;'))
... Lexing...
LexToken(OPEN,'(',1,0)
LexToken(AND,'and',1,1)
LexToken(OPEN,'(',1,5)
LexToken(NUMERAL,'0',1,6)
LexToken(NUMERAL,'1',1,8)
LexToken(NUMERAL,'2',1,10)
LexToken(NUMERAL,'3',1,12)
LexToken(NUMERAL,'4',1,14)
LexToken(QUOTEDSTRING,"'more;'",1,16)
LexToken(CLOSE,')',1,23)
LexToken(CLOSE,')',1,24)
...Parsing...
Boolean: (and (0 1 2 3 4 'more;')): ops = 1, names = 1

Sentence: (if (not ('True')) (and (0 '=' 1) (0 '=' 2) (not ('FalseStatement3'))))
... Lexing...
LexToken(OPEN,'(',1,0)
LexToken(IF,'if',1,1)
LexToken(OPEN,'(',1,4)
LexToken(NOT,'not',1,5)
LexToken(OPEN,'(',1,9)
LexToken(QUOTEDSTRING,"'True'",1,10)
LexToken(CLOSE,')',1,16)
LexToken(CLOSE,')',1,17)
LexToken(OPEN,'(',1,19)
LexToken(AND,'and',1,20)
LexToken(OPEN,'(',1,24)
LexToken(NUMERAL,'0',1,25)
LexToken(QUOTEDSTRING,"'='",1,27)
LexToken(NUMERAL,'1',1,31)
LexToken(CLOSE,')',1,32)
LexToken(OPEN,'(',1,34)
LexToken(NUMERAL,'0',1,35)
LexToken(QUOTEDSTRING,"'='",1,37)
LexToken(NUMERAL,'2',1,41)
LexToken(CLOSE,')',1,42)
LexToken(OPEN,'(',1,44)
LexToken(NOT,'not',1,45)
LexToken(OPEN,'(',1,49)
LexToken(QUOTEDSTRING,"'FalseStatement3'",1,50)
LexToken(CLOSE,')',1,67)
LexToken(CLOSE,')',1,68)
LexToken(CLOSE,')',1,69)
LexToken(CLOSE,')',1,70)
...Parsing...
Boolean: (if (not ('True')) (and (0 '=' 1) (0 '=' 2) (not ('FalseStatement3')))): ops = 4, names = 4

Sentence: (and (1000) (1001) ('1001+'))
... Lexing...
LexToken(OPEN,'(',1,0)
LexToken(AND,'and',1,1)
LexToken(OPEN,'(',1,5)
LexToken(NUMERAL,'1000',1,6)
LexToken(CLOSE,')',1,10)
LexToken(OPEN,'(',1,12)
LexToken(NUMERAL,'1001',1,13)
LexToken(CLOSE,')',1,17)
LexToken(OPEN,'(',1,19)
LexToken(QUOTEDSTRING,"'1001+'",1,20)
LexToken(CLOSE,')',1,27)
LexToken(CLOSE,')',1,28)
...Parsing...
Boolean: (and (1000) (1001) ('1001+')): ops = 1, names = 1

Sentence: (or (100) ('and' 1000 1001 '1001+'))
... Lexing...
LexToken(OPEN,'(',1,0)
LexToken(OR,'or',1,1)
LexToken(OPEN,'(',1,4)
LexToken(NUMERAL,'100',1,5)
LexToken(CLOSE,')',1,8)
LexToken(OPEN,'(',1,10)
LexToken(QUOTEDSTRING,"'and'",1,11)
LexToken(NUMERAL,'1000',1,17)
LexToken(NUMERAL,'1001',1,22)
LexToken(QUOTEDSTRING,"'1001+'",1,27)
LexToken(CLOSE,')',1,34)
LexToken(CLOSE,')',1,35)
...Parsing...
Boolean: (or (100) ('and' 1000 1001 '1001+')): ops = 1, names = 2